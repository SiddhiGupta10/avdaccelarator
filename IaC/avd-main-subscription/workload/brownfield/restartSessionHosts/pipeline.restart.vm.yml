name: 'Restart Session Hosts Pipeline'

parameters:
- name: environment
  displayName: 'Environment to deploy to'
  type: string
  default: 'canary'
  values:
  - canary
  - production

variables:
- template: pipeline.variables.yml

# Environment specific details
- ${{ if eq(parameters.environment, 'canary') }}:
  # - name: poolName
  #   value: ''
  - name: serviceConnection
    value: '<service_connection>' ## change for each subscription
  - name: devOpsPipelineEnvironment
    value: 'AVD-Canary'

- ${{ if eq(parameters.environment, 'production') }}:
  # - name: poolName
  #   value: ''
  - name: serviceConnection
    value: '<service_connection>' ## change for each subscription
  - name: devOpsPipelineEnvironment
    value: 'AVD-Production'

# pool:
#   name: $(poolName)

trigger: none

stages:
- stage: Validation
  condition: succeeded()
  jobs:
  - job: Template_Validation
    displayName: 'Validation - ${{ parameters.environment }}'
    steps:
    - task: AzureCLI@2
      inputs:
        azureSubscription: '$(serviceConnection)'
        scriptType: bash
        scriptLocation: inlineScript
        useGlobalConfig: false
        inlineScript: |
          az --version
          az deployment sub what-if \
            --location $(location) \
            --template-file $(System.DefaultWorkingDirectory)/$(templatePath) \
            --parameters $(System.DefaultWorkingDirectory)/$(parametersPath)

- stage: Restart
  dependsOn: Validation
  condition: succeeded('Validation')
  jobs:
  - deployment: Template_Execution
    displayName: 'Restart Initiation - ${{ parameters.environment }} '
    environment: $(devOpsPipelineEnvironment)
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - task: AzureCLI@2
            inputs:
              environment: '$(devOpsPipelineEnvironment)'
              azureSubscription: '$(serviceConnection)'
              scriptType: bash
              scriptLocation: inlineScript
              useGlobalConfig: false
              workingDirectory: '$(System.DefaultWorkingDirectory)'
              inlineScript: |
                az deployment sub create \
                  --location $(location) \
                  --template-file $(System.DefaultWorkingDirectory)/$(templatePath) \
                  --parameters $(System.DefaultWorkingDirectory)/$(parametersPath)
                  